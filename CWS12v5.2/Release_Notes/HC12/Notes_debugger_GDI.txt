=====================================
 GDI Connection Release Notes
=====================================

====================================
 GDI Connection gdi.tgt v6.1.10
====================================

- SofTec HC08 Cables and Hardware are now supported through the SofTec HC08 Connection
- SofTec HCS08 BDM Cables and Hardware are now supported through the SofTec HCS08 Connection
- HCS08 Serial Monitor is now supported through the HCS08 Serial Monitor Connection
- Connection is now hidden in the Set Connection dialog
The GDI Connection is still available through the "set gdi" command line command. 

====================================
 GDI Connection gdi.tgt v6.1.9
====================================

List of New Features
--------------------

-HexLoader debugger srecord files loading new commands:

   Two new environment variables (these variables should never be used at the same time):

   . HCS12 srecord linear to logical conversion support with SRECISHCS12LINEARADR variable in HI-WAVE section.
     N.B: The variable must be set to 1 (e.g. SRECISHCS12LINEARADR=1) to be active.  

   . HCS12X srecord global to logical conversion support with SRECISS12XGLOBALADR variable in HI-WAVE section.
     N.B: The variable must be set to 1 (e.g. SRECISS12XGLOBALADR=1) to be active.  

-Debugging Memory Map dialog and Manager
 ---------------------------------------
The Debugging Memory Map dialog user interface replaces the "banked Memory Location" dialog
("Set Bank..." menu entry). This interface provides a global approach for all different
CPU families, each family having its own method for memory access and its own memory
onchip layout and memory module priorities.
By the way, the "BANKWINDOW" command has been completely removed, as banks handling is
now transparently handled by the Debugging Memory Map Manager. In case of error due to this
command execution, please remove/comment this command. In case of any further debugging problem
due to this command removal, please contact Metrowerks support team.

The graphical user interface is flexible enough to be handled without much text description
here, and live diagnostic is displayed within the dialog. Anytime, it is possible to revert
to default (factory) setup, and most of the time, the user does not need to edit/change settings
within this dialog.

Functionalities:

-Pressing "New" button will create a new module, and open directly the edition dialog to
 setup this new module.
-Pressing "Modify" opens the edition dialog of the selected module in list.
 More module information are displayed here, and an enhanced diagnostic is also displayed.
-Pressing "Delete" button will lead to module removing, after a warning dialog.
-Pressing "Revert to default" will remove the current setup (usually saved into current project)
 and retrieve the default (factory) setup for an internal database.

Module edition:

-"Enable memory module" options maps the module in the debugger. Unchecking this option
 makes the module completely "transparent" for the debugger.
-The "Type" drop down list provides all kinds of memory type available for this processor.
-The "Priority" drop down list provides all kinds of memory overlap priority available 
 for this processor. The debugger can have a bigger priority ("highest") to setup an upper
 module that can overlap an onchip module, this to make a display filter, e.g. creating
 an "no read access while running" memory range.
-The "Refresh memory when halting" option controls debugger memory cache. When this option
 is checked, internal image/cache of memory data are always deleted and the data is always
 retrieved from hardware when required by the debugger. When unchecked (usually by default
 for Non Volatile Memory areas) the debugger keeps a copy of the data and does not retrieve
 the data from hardware until next application loading/programming.
-The "no memory access while running" option can be used to discard debugger access to a
 memory range which can regularly be accessed while running. This feature is useful to protect
 onchip register flags from being triggered by debugger reads.

Remark: 

-Modules range/boundary are always limited to an overlapped module with a bigger priority.
 For example, if 2 bytes have been defined in a module which overlaps another module, accessing
 these 2 bytes will be performed using the 2-byte module properties. 
 The memory on both sides of these 2 bytes will be accessed using the overlapped module properties.


- Debugging Memory Map Manager command set
------------------------------------------
 
 The Debugging Memory Map Manager (DMM) has been extended with commands. The commands provide the 
 possibility to fully script the debugging device memory mapping. However, the usage of these
 commands should be limited to special debugging purposes, as the default mapping is typically
 sufficient, and a script setup being complex and possibly leading to debugger disfunctions.

 List of new commands:

 DMM
 DMM ADD <parameters>
 DMM DEL <module handle>
 DMM SAVE <mcuid>
 DMM DELETEALLMODULES
 DMM RELEASECACHES
 DMM CACHINGON|CACHINGOFF
 DMM HCS12MERHANDLINGON|HCS12MERHANDLINGOFF

 -"DMM" command.
 Syntax: DMM
 Purpose: Displays in the Command window the current DMM "Memory Types", "Overlap Priorities" and
          memory modules.
 
 -"DMM ADD" command.
 Syntax: DMM ADD <comment> <address> <size> <handle> <type> <cache locking> <priority> <mapping> <access while running>
   with: 
    -<comment> a string for Comment field; "£" must be used for " " (space).
    -<address> the start address of the module
	-<size> the size of the module
	-<handle> a long value for the DMM to handle the module (duplicated handled is not allowed).
	 Important: User defined handles must be a value superior or equal to 100.
	-<type> a value corresponding to a memory type handle, as given/listed with the DMM command.
	-<cache locking> a "0" or "1" value, "0" forcing the module to be refreshed after each debugger halting.
	-<priority> a value corresponding to an overlap priority handle/value, as given/listed with the DMM command.
	-<mapping> a "0" or "1" value, "1" enabling the module mapping.
	-<access while running> a "0" or "1" value, "1" enabling the module access while running.
	 This last parameter can be internally disabled according to the memory type.
 
 Purpose: insert a new module in the DMM, as if added via the DMM dialog/user interface.

 -"DMM DEL" command.
 Syntax: DEL <module handle>
  with <module handle>, a module handle as given/listed with the DMM command.
 Purpose: Delete one specific DMM module by handle reference.
 
 -"DMM SAVE" command.
 Syntax: DMM SAVE <mcuid>
  with <mcuid>, a part/device mcuid value in range $0-$FFFF.
 Purpose: saves the DMM current setup in current project ini file, under "DMM_MCUIDxxxx_MODULEn=..." keys.

 -"DMM DELETEALLMODULES" command.
 Syntax: DMM DELETEALLMODULES
 Purpose: removes all current DMM modules. Useful to start a scripted DMM setup.

 -"DMM RELEASECACHES" command.
 Syntax: DMM RELEASECACHES
 Purpose: flushes once all currently cached data for each module, even if the cache locking is 
          active, i.e. no refresh on halting is active.

 -"DMM CACHINGON" command.
 Syntax: DMM CACHINGON
 Purpose: data caching is engaged (default DMM setup). No refresh on halting is active for modules defined
          with this option.

 -"DMM CACHINGOFF" command.
 Syntax: DMM CACHINGOFF
 Purpose: data caching  is disabled. The debugger flushes all caches even for modules defined
          without this option. Each time the debugger halts, the memory data are retrieve from 
		  the target hardware for all modules.

 -"DMM HCS12MERHANDLINGON" command.
 Syntax: DMM HCS12MERHANDLINGON
 Purpose: enables the handling of Memory Expansion Registers for HCS12 devices, i.e. INITRM, INITRG and
          INITEE. The DMM remaps automatically module addresses according to the real value
		  of these registers when halting.
		  Note that the debugger does not poll these registers while running. Also the remapping
		  is performed only on factory defined modules, not user defined modules.
          
 -"DMM HCS12MERHANDLINGOFF" command.
 Syntax: DMM HCS12MERHANDLINGOFF
 Purpose: disables completely the feature here above. 

Improvements
------------
-The Debugging Memory Map provides now for HCS12 and HCS12X parts, by default, the physical bank window(s) visibility 
 in $0000-$FFFF memory range (in Memory window), i.e. according to current page(s) register(s) value(s). 
 Above this range, the logical memory is displayed.


====================================
 GDI Target Interface gdi.tgt v6.1.8
====================================

List of new Features
------------------------------
- Internal update generated for CW08V31.
 
List of fixed Bugs
------------------------------
- None. 

List of known Bugs
------------------------------
- None.


====================================
 GDI Target Interface gdi.tgt v6.1.7
====================================

List of new Features
------------------------------
- Internal update generated for CW12V40.
 
List of fixed Bugs
------------------------------
- None. 

List of known Bugs
------------------------------
- None.


====================================
 GDI Target Interface gdi.tgt v6.1.6
====================================

List of New Features
--------------------

- None.

Improvements
------------

- DBG12 code program flow rebuild:
. CALL instruction execution with destination outside bank/page window range ($8000-$BFFF) is 
  now also supported. 
. Code execution rebuild from $FFFx to $000x is now also supported.

 Onchip DBG module limitation
 ----------------------------
 . Real time code profiling and coverage is limited to non banked memory applications/code.

 Demo version limitations
 ------------------------
 - The DBG support is limited:
 . Code reconstruction is limited to the 20 latest instructions when in demo mode,
 . No Profiling nor coverage when in demo mode,
 . No Predefined triggers allowed when in demo mode.

List of fixed Bugs
------------------------------
- None.

List of known Bugs
------------------------------
- None.


====================================
 GDI Target Interface gdi.tgt v6.1.5
====================================

List of new Features
------------------------------
- Internal update.
 
List of fixed Bugs
------------------------------
- None. 

List of known Bugs
------------------------------
- None.


====================================
 GDI Target Interface gdi.tgt v6.1.4
====================================

List of New Features
--------------------
- Added support for HCS08:
GDI Target Interface is now available for ST7, HCS08, HC08, HCS12, HC12.


List of Fixed Bugs
------------------
- none.


List of Known Bugs
------------------
- none.


====================================
 GDI Target Interface gdi.tgt v6.1.3
====================================

List of New Features
--------------------
- Added support for HCS12.


List of Fixed Bugs
------------------
- none.


List of Known Bugs
------------------
- none.


====================================
 GDI Target Interface gdi.tgt v6.1.2
====================================


Special version generated for STM V1.1 compatibility (ST7 SofTec).


List of New Features
--------------------
- none.


List of Fixed Bugs
------------------
- none.


List of Known Bugs
------------------
- none.


====================================
 GDI Target Interface gdi.tgt v6.1.1
====================================


List of New Features
--------------------
- First release, for HC08.


List of Fixed Bugs
------------------
- none.


List of Known Bugs
------------------
- none.