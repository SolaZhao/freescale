memory_banker_cmdline:

This is a simple HCS12X ANSI-C project which supports "Memory Banker" feature.This feature optimizes and distributes code and data. It is a two step compile-link process.
A batch file(build.bat) is used to build the application.

Folders used:

- src:
  * main.c : This contains valid objects(code,data) to demonstrate "Memory Banker".
  * Start12.c : It has startup code for the application. It can be modified though.
  
- prm:
  * example.prm : This is the linker parameter file used for linking the application.
    Note: Qualifiers and keywords are used in this file for optimization:
    To determine which SEGMENTS are "banked" or "not banked" it has to be added DATA_NEAR or IBCC_NEAR(interbank calling convention near) respectively DATA_FAR or IBCC_FAR (interbank calling convention far) flag. In PLACEMENT section,the distribution segment (default DATA_DISTRIBUTE,CONST_DATA_DISTRIBUTE,DISTRIBUTE) has
    to be followed by the "DISTRIBUTE_INTO" keyword.

- obj:
  This contains the object files.

- gen:
  This folder has the intermediary files  generated by pass one linker. Following is the brief information about the files:
  * code.h , data.h - Files are included for second pass compilation. Files have objects to which hints are given.
  * code.txt , data.txt - These files give information about the objects and the segments to which they are assigned. They also mention gain in code and data optimization.
  * options.txt - This file has compiler option(-NonConstQualiNear ) which will be appended to pass two Compiler options.
  * library.txt - This file has information about the libraries. Second Pass linker uses this file as input.
  
Following are the steps to execute build.bat:

- Set the INSTALLPATH environment variable to point to you CodeWarrior installation (e.g. set INSTALLPATH=d:\Program Files\Freescale\CodeWarrior for S12(X) V5.0).
  Note that there are no quotes used when defining the environment variable.
- On command line, change directory to project folder "memory_banker_cmdline".
- Execute build.bat
- This generates optimized output file "example.abs" in folder memory_banker_cmdline. A map file(example.map) is also generated.

As compared to using the large memory model, the size of the code generated for the function "my_sin" decreases by 6%.

